Write a C Program to implement Shift Cipher.
PROGRAM:
#include<stdio.h>
int main()
{
 int n,i;
 printf("Enter the length of the string: ");
 scanf("%d",&n);
 char str[n];
 printf("Enter the string: ");
 scanf(" %s",str);
 printf("Enter the shift value: ");
 int k;
 scanf("%d",&k);
 for(i=0;i<n;i++)
 {
 if(str[i]>=65 && str[i]<=95){
 str[i]=((str[i]+k-65)%26)+65;
}
else
{
 str[i]=((str[i]+k-97)%26)+97;
}
}
printf("Encryption Shift Cipher: %s\n",str);
for(i=0;i<n;i++){
if(str[i]>=65 && str[i]<=95){
str[i]=((str[i]-k-65)%26)+65;
}
else
{
 str[i]=((str[i]-k-97)%26)+97;
}
}
printf("Decryption Shift Cipher: %s",str);
}



2.1) Write a C Program to implement one-time pad cipher.
PROGRAM:
#include<stdio.h>
int main()
{
 int n;
 printf("Enter Length: ");
 scanf("%d",&n);
 printf("Enter both plain text and key in the same case(upper/lower)\n");
 char plain[n],key[n];
 printf("Enter plain text: ");
 scanf("%s",plain);
 printf("Enter key: ");
 scanf(" %s",key);
 printf("Cipher: ");
 char cipher[n+1];
 for(int i=0;i<n;i++)
 {
 if(plain[i]>=65 && plain[i]<=90)
 {
 cipher[i]=(char)(((plain[i]-65)+(key[i]-65))%26)+65;
}
else
{
 cipher[i]=(char)(((plain[i]-97)+(key[i]-97))%26)+97;
}
printf("%c",cipher[i]);
}
cipher[n]='\0';
printf("\n");
printf("After Decryption: ");
for(int i=0;i<n;i++)
{
 if(key[i]>=65 && key[i]<=90)
 {
 int a=((cipher[i]-65)-(key[i]-65))%26;
 if(a<0)
 a+=26;
 cipher[i]=((char)a)+65;
}
else
{
 int a=((cipher[i]-97)-(key[i]-97))%26;
 if(a<0)
 a+=26;
 cipher[i]=((char)a)+97;
}
printf("%c",cipher[i]);
}
}



2.2) Write a C Program to implement Vernam Cipher.
PROGRAM:
#include<stdio.h>
int main()
{
 int n;
 printf("Enter length: ");
 scanf("%d",&n);
 printf("Enter both plain text and key in the same case (upper/lower)\n");
 char plain[n],key[n];
 printf("Enter plain text: ");
 scanf("%s",plain);
 printf("Enter key: ");
 scanf(" %s",key);
 printf("Cipher: ");
 char cipher[n+1];
 for(int i=0;i<n;i++)
 {
 cipher[i]=(char)(plain[i]^key[i]);
 if(plain[i]>=65 && plain[i]<=90)
 printf("%c",(cipher[i]%26)+65);
else
printf("%c",(cipher[i]%26)+97);
}
printf("\n");
cipher[n]='\0';
char deplain[n+1];
for(int i=0;i<n;i++)
{
 deplain[i]=(char)(cipher[i]^key[i]);
}
deplain[n]='\0';
printf("After decryption, plain text is: %s\n",deplain);
}




3.1) To write a C Program to implement DES Algorithm.
Program:
#include<stdio.h>
int main(){
int i, cnt=0, p8[8]={6,7,8,9,1,2,3,4};
int p10[10]={6,7,8,9,10,1,2,3,4,5};
char input[11], k1[10], k2[10], temp[11], LS1[5], LS2[5];
printf("Enter 10 bits input: ");
scanf("%s",input);
input[10]='\0'; //Applyi\ng p10...
for(i=0; i<10; i++){
cnt = p10[i];
 temp[i] = input[cnt-1];
}
temp[i]='\0';
printf("Your p10 key is: ");
for(i=0; i<10; i++){
printf("%d,",p10[i]);
}
printf("\nBits after p10: ");
puts(temp);
//Performing Left Shift-1 on first half of temp
for(i=0; i<5; i++){
if(i==4) temp[i]=temp[0];
else temp[i]=temp[i+1];
}
for(i=5; i<10; i++){
if(i==9) temp[i]=temp[5];
else temp[i]=temp[i+1];
}
printf("Output after LS-1: ");
puts(temp);
printf("\nYour p8 key is: ");
for(i=0; i<8; i++){
printf("%d,",p8[i]);
}
for(i=0; i<8; i++)
{
cnt = p8[i];
k1[i] = temp[cnt-1];
}
printf("\nYour key k1 is: ");
puts(k1);
//This program can be extended to generate k2 as per DES algorithm.
} 




4.1) Write a C Program to implement RSA Algorithm.
Program:
#include<stdio.h>
#include<math.h>
int main()
{
int p,q,d,e,n,phi_n,com;
printf("Enter two prime numbers:");
scanf("%d%d",&p,&q);
n=p*q;
phi_n=(p-1)*(q-1);
printf("phi of n value is: %d",phi_n);
printf("\nEnter the value for e(so that gcd(e,phi_n)=1):");
scanf("%d",&e);
d=(1+(phi_n/e));
printf("d value is %d",d);
printf("\nEnter the value for m:");
scanf("%d",&m);
printf("Encryption:");
C=((int)pow(m,e))%n; m=((int)pow(c,d))%n;
printf("%d",c);
printf("\nDecryption is:");
printf("%d",m);
}
